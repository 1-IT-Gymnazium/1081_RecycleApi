{
  "api/Recycle.Api.BackgroundServices.EmailSenderBackgroundService.html": {
    "href": "api/Recycle.Api.BackgroundServices.EmailSenderBackgroundService.html",
    "title": "Class EmailSenderBackgroundService | RecycleApi",
    "keywords": "Class EmailSenderBackgroundService Namespace Recycle.Api.BackgroundServices Assembly Recycle.Api.dll public class EmailSenderBackgroundService : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService EmailSenderBackgroundService Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmailSenderBackgroundService(IServiceProvider) public EmailSenderBackgroundService(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/Recycle.Api.BackgroundServices.html": {
    "href": "api/Recycle.Api.BackgroundServices.html",
    "title": "Namespace Recycle.Api.BackgroundServices | RecycleApi",
    "keywords": "Namespace Recycle.Api.BackgroundServices Classes EmailSenderBackgroundService"
  },
  "api/Recycle.Api.Controllers.ArticleController.html": {
    "href": "api/Recycle.Api.Controllers.ArticleController.html",
    "title": "Class ArticleController | RecycleApi",
    "keywords": "Class ArticleController Namespace Recycle.Api.Controllers Assembly Recycle.Api.dll [ApiController] public class ArticleController : ControllerBase Inheritance object ControllerBase ArticleController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ArticleController(ILogger<ArticleController>, IClock, AppDbContext) public ArticleController(ILogger<ArticleController> logger, IClock clock, AppDbContext dbContext) Parameters logger ILogger<ArticleController> clock IClock dbContext AppDbContext Methods Create(ArticleCreateModel) Creates a new article by checking if the article heading already exists, and then saving the new article to the database. [HttpPost(\"api/v1/Article/\")] public Task<ActionResult> Create(ArticleCreateModel model) Parameters model ArticleCreateModel The details of the article to be created, including heading, annotation, and picture path. Returns Task<ActionResult> Returns 201 (Created) with the URL to the new article if successful, or 400 (Bad Request) with an error if the article with the same heading already exists. DeleteArticle(Guid) Deletes an article by setting it as deleted in the database (soft delete). [HttpDelete(\"api/v1/Article/{id:guid}\")] public Task<IActionResult> DeleteArticle(Guid id) Parameters id Guid The ID of the article to delete. Returns Task<IActionResult> Returns 204 (No Content) if the article is successfully deleted, or 404 (Not Found) if the article does not exist. Get(Guid) Retrieves the details of a specific article by its ID, including author information, and ensures that the article is not deleted. [HttpGet(\"api/v1/Article/{id:guid}\")] public Task<ActionResult<ArticleDetailModel>> Get(Guid id) Parameters id Guid The ID of the article to retrieve. Returns Task<ActionResult<ArticleDetailModel>> Returns 200 (OK) with the article details if found, or 404 (Not Found) if the article does not exist. GetList() Retrieves a list of all articles, including their author information, and filters out deleted articles. [HttpGet(\"api/v1/Article/\")] public Task<ActionResult<List<ArticleDetailModel>>> GetList() Returns Task<ActionResult<List<ArticleDetailModel>>> Returns 200 (OK) with a list of article details. Update(Guid, JsonPatchDocument<ArticleDetailModel>) Updates an existing article's details (heading, annotation, picture path) by applying a patch. It also checks if the updated heading is unique before saving the changes. [HttpPatch(\"api/v1/Article/{id:guid}\")] public Task<ActionResult<ArticleDetailModel>> Update(Guid id, JsonPatchDocument<ArticleDetailModel> patch) Parameters id Guid The ID of the article to update. patch JsonPatchDocument<ArticleDetailModel> The patch document containing the fields to update. Returns Task<ActionResult<ArticleDetailModel>> Returns 200 (OK) with the updated article details if successful, or 404 (Not Found) if the article doesn't exist, or 400 (Bad Request) if there are validation errors."
  },
  "api/Recycle.Api.Controllers.AuthController.html": {
    "href": "api/Recycle.Api.Controllers.AuthController.html",
    "title": "Class AuthController | RecycleApi",
    "keywords": "Class AuthController Namespace Recycle.Api.Controllers Assembly Recycle.Api.dll [ApiController] public class AuthController : ControllerBase Inheritance object ControllerBase AuthController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(EmailSenderService, IClock, UserManager<ApplicationUser>, SignInManager<ApplicationUser>) public AuthController(EmailSenderService emailSenderService, IClock clock, UserManager<ApplicationUser> userManager, SignInManager<ApplicationUser> signInManager) Parameters emailSenderService EmailSenderService clock IClock userManager UserManager<ApplicationUser> signInManager SignInManager<ApplicationUser> Methods Login(LogInModel) This method lets a user log in by checking their email and password. It also makes sure the email is confirmed before logging in. [HttpPost(\"api/v1/Auth/Login\")] public Task<ActionResult> Login(LogInModel model) Parameters model LogInModel The user's email and password. Returns Task<ActionResult> If the login works, it returns 204 (No Content). If it fails, it shows an error message. Logout() Logs the user out by ending their session. [Authorize] [HttpPost(\"api/v1/Auth/Logout\")] public Task<ActionResult> Logout() Returns Task<ActionResult> Returns 204 (No Content) when the logout is successful. Register(RegisterModel) Handles user registration by creating a new user, validating the password, and sending an email confirmation link. [HttpPost(\"api/v1/Auth/Register\")] [ProducesResponseType(204)] [ProducesResponseType(400)] public Task<ActionResult> Register(RegisterModel model) Parameters model RegisterModel The user's registration details like name, email, and password. Returns Task<ActionResult> Returns 200 (OK) with the confirmation token if successful, or 400 (Bad Request) with errors if the registration fails. TestMeBeforeLoginAndAfter() A test endpoint to check access before and after logging in. [Authorize] [HttpGet(\"api/v1/Auth/TestMeBeforeLoginAndAfter\")] public ActionResult TestMeBeforeLoginAndAfter() Returns ActionResult Returns 200 (OK) with a success message if the endpoint is reached. ValidateToken(TokenModel) unescape token before sending [HttpPost(\"api/v1/Auth/ValidateToken\")] public Task<ActionResult> ValidateToken(TokenModel model) Parameters model TokenModel Returns Task<ActionResult>"
  },
  "api/Recycle.Api.Controllers.LocationController.html": {
    "href": "api/Recycle.Api.Controllers.LocationController.html",
    "title": "Class LocationController | RecycleApi",
    "keywords": "Class LocationController Namespace Recycle.Api.Controllers Assembly Recycle.Api.dll [ApiController] public class LocationController : ControllerBase Inheritance object ControllerBase LocationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LocationController(ILogger<LocationController>, IClock, AppDbContext, IApplicationMapper) public LocationController(ILogger<LocationController> logger, IClock clock, AppDbContext dbContext, IApplicationMapper mapper) Parameters logger ILogger<LocationController> clock IClock dbContext AppDbContext mapper IApplicationMapper Methods CreateLocation(LocationCreateModel) [HttpPost(\"api/v1/Location/\")] public Task<ActionResult<LocationDetailModel>> CreateLocation(LocationCreateModel model) Parameters model LocationCreateModel Returns Task<ActionResult<LocationDetailModel>> DeleteMaterial(Guid) [HttpDelete(\"api/v1/Location/{id:guid}\")] public Task<IActionResult> DeleteMaterial(Guid id) Parameters id Guid Returns Task<IActionResult> GetById(Guid) [HttpGet(\"api/v1/Location/{id:guid}\")] public Task<ActionResult<LocationDetailModel>> GetById(Guid id) Parameters id Guid Returns Task<ActionResult<LocationDetailModel>> GetListLocations() [HttpGet(\"api/v1/Location/\")] public Task<ActionResult<List<LocationDetailModel>>> GetListLocations() Returns Task<ActionResult<List<LocationDetailModel>>> UpdateLocation(Guid, JsonPatchDocument<LocationDetailModel>) [HttpPatch(\"api/v1/Location/{id:guid}\")] public Task<ActionResult<LocationDetailModel>> UpdateLocation(Guid id, JsonPatchDocument<LocationDetailModel> patch) Parameters id Guid patch JsonPatchDocument<LocationDetailModel> Returns Task<ActionResult<LocationDetailModel>>"
  },
  "api/Recycle.Api.Controllers.MaterialController.html": {
    "href": "api/Recycle.Api.Controllers.MaterialController.html",
    "title": "Class MaterialController | RecycleApi",
    "keywords": "Class MaterialController Namespace Recycle.Api.Controllers Assembly Recycle.Api.dll [ApiController] public class MaterialController : ControllerBase Inheritance object ControllerBase MaterialController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MaterialController(ILogger<MaterialController>, IClock, AppDbContext, IApplicationMapper) public MaterialController(ILogger<MaterialController> logger, IClock clock, AppDbContext dbContext, IApplicationMapper mapper) Parameters logger ILogger<MaterialController> clock IClock dbContext AppDbContext mapper IApplicationMapper Methods Create(MaterialCreateModel) [HttpPost(\"api/v1/Material/\")] public Task<ActionResult> Create(MaterialCreateModel model) Parameters model MaterialCreateModel Returns Task<ActionResult> DeleteMaterial(Guid) [HttpDelete(\"api/v1/Material/{id:guid}\")] public Task<IActionResult> DeleteMaterial(Guid id) Parameters id Guid Returns Task<IActionResult> GetById(Guid) [HttpGet(\"api/v1/Material/{id:guid}\")] public Task<ActionResult<MaterialDetailModel>> GetById(Guid id) Parameters id Guid Returns Task<ActionResult<MaterialDetailModel>> GetList() [HttpGet(\"api/v1/Material/\")] public Task<ActionResult<List<MaterialDetailModel>>> GetList() Returns Task<ActionResult<List<MaterialDetailModel>>> UpdateMaterial(Guid, JsonPatchDocument<MaterialDetailModel>) [HttpPatch(\"api/v1/Material/{id:guid}\")] public Task<ActionResult<MaterialDetailModel>> UpdateMaterial(Guid id, JsonPatchDocument<MaterialDetailModel> patch) Parameters id Guid patch JsonPatchDocument<MaterialDetailModel> Returns Task<ActionResult<MaterialDetailModel>>"
  },
  "api/Recycle.Api.Controllers.PartController.html": {
    "href": "api/Recycle.Api.Controllers.PartController.html",
    "title": "Class PartController | RecycleApi",
    "keywords": "Class PartController Namespace Recycle.Api.Controllers Assembly Recycle.Api.dll [ApiController] public class PartController : ControllerBase Inheritance object ControllerBase PartController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PartController(ILogger<ProductController>, IClock, AppDbContext, IApplicationMapper) public PartController(ILogger<ProductController> logger, IClock clock, AppDbContext dbContext, IApplicationMapper mapper) Parameters logger ILogger<ProductController> clock IClock dbContext AppDbContext mapper IApplicationMapper Methods CreatePart(PartCreateModel) [HttpPost(\"api/v1/Part/\")] public Task<ActionResult> CreatePart(PartCreateModel model) Parameters model PartCreateModel Returns Task<ActionResult> DeletePart(Guid) [HttpDelete(\"api/v1/Part/{id:guid}\")] public Task<IActionResult> DeletePart(Guid id) Parameters id Guid Returns Task<IActionResult> GetById(Guid) [HttpGet(\"api/v1/Part/{id:guid}\")] public Task<ActionResult<PartDetailModel>> GetById(Guid id) Parameters id Guid Returns Task<ActionResult<PartDetailModel>> GetListPart() [HttpGet(\"api/v1/Part/\")] public Task<ActionResult<List<PartDetailModel>>> GetListPart() Returns Task<ActionResult<List<PartDetailModel>>> UpdatePart(Guid, JsonPatchDocument<PartDetailModel>) [HttpPatch(\"api/v1/Part/{id:guid}\")] public Task<ActionResult<PartDetailModel>> UpdatePart(Guid id, JsonPatchDocument<PartDetailModel> patch) Parameters id Guid patch JsonPatchDocument<PartDetailModel> Returns Task<ActionResult<PartDetailModel>>"
  },
  "api/Recycle.Api.Controllers.ProductController.html": {
    "href": "api/Recycle.Api.Controllers.ProductController.html",
    "title": "Class ProductController | RecycleApi",
    "keywords": "Class ProductController Namespace Recycle.Api.Controllers Assembly Recycle.Api.dll [ApiController] public class ProductController : ControllerBase Inheritance object ControllerBase ProductController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductController(ILogger<ProductController>, IClock, AppDbContext, IApplicationMapper) public ProductController(ILogger<ProductController> logger, IClock clock, AppDbContext dbContext, IApplicationMapper mapper) Parameters logger ILogger<ProductController> clock IClock dbContext AppDbContext mapper IApplicationMapper Methods CreateProduct(ProductCreateModel) Creates a new product entity from model [HttpPost(\"api/v1/Product/\")] public Task<ActionResult> CreateProduct(ProductCreateModel model) Parameters model ProductCreateModel Data model which is providing informations about the created Product Returns Task<ActionResult> ActionResult is idicating DeleteProduct(Guid) [HttpDelete(\"api/v1/Product/{id:guid}\")] public Task<IActionResult> DeleteProduct(Guid id) Parameters id Guid Returns Task<IActionResult> GetListProduct() [HttpGet(\"api/v1/Product/\")] public Task<ActionResult<List<ProductDetailModel>>> GetListProduct() Returns Task<ActionResult<List<ProductDetailModel>>> GetProductById(Guid) [HttpGet(\"api/v1/Product/{id:guid}\")] public Task<ActionResult<ProductDetailModel>> GetProductById(Guid id) Parameters id Guid Returns Task<ActionResult<ProductDetailModel>> UpdateProduct(Guid, JsonPatchDocument<ProductDetailModel>) [HttpPatch(\"api/v1/Product/{id:guid}\")] public Task<ActionResult<ProductDetailModel>> UpdateProduct(Guid id, JsonPatchDocument<ProductDetailModel> patch) Parameters id Guid patch JsonPatchDocument<ProductDetailModel> Returns Task<ActionResult<ProductDetailModel>>"
  },
  "api/Recycle.Api.Controllers.TrashCanController.html": {
    "href": "api/Recycle.Api.Controllers.TrashCanController.html",
    "title": "Class TrashCanController | RecycleApi",
    "keywords": "Class TrashCanController Namespace Recycle.Api.Controllers Assembly Recycle.Api.dll [ApiController] public class TrashCanController : ControllerBase Inheritance object ControllerBase TrashCanController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TrashCanController(ILogger<TrashCanController>, IClock, AppDbContext, IApplicationMapper) public TrashCanController(ILogger<TrashCanController> logger, IClock clock, AppDbContext dbContext, IApplicationMapper mapper) Parameters logger ILogger<TrashCanController> clock IClock dbContext AppDbContext mapper IApplicationMapper Methods CreateTrashCan(TrashCanCreateModel) [HttpPost(\"api/v1/TrashCan/\")] public Task<ActionResult> CreateTrashCan(TrashCanCreateModel model) Parameters model TrashCanCreateModel Returns Task<ActionResult> DeleteTrashCan(Guid) [HttpDelete(\"api/v1/TrashCan/{id:guid}\")] public Task<IActionResult> DeleteTrashCan(Guid id) Parameters id Guid Returns Task<IActionResult> GetById(Guid) [HttpGet(\"api/v1/TrashCan/{id:guid}\")] public Task<ActionResult<TrashCanDetailModel>> GetById(Guid id) Parameters id Guid Returns Task<ActionResult<TrashCanDetailModel>> GetListTrashCan() [HttpGet(\"api/v1/TrashCan/\")] public Task<ActionResult<List<TrashCanDetailModel>>> GetListTrashCan() Returns Task<ActionResult<List<TrashCanDetailModel>>> UpdateTrashCan(Guid, JsonPatchDocument<TrashCanDetailModel>) [HttpPatch(\"api/v1/TrashCan/{id:guid}\")] public Task<ActionResult<TrashCanDetailModel>> UpdateTrashCan(Guid id, JsonPatchDocument<TrashCanDetailModel> patch) Parameters id Guid patch JsonPatchDocument<TrashCanDetailModel> Returns Task<ActionResult<TrashCanDetailModel>>"
  },
  "api/Recycle.Api.Controllers.html": {
    "href": "api/Recycle.Api.Controllers.html",
    "title": "Namespace Recycle.Api.Controllers | RecycleApi",
    "keywords": "Namespace Recycle.Api.Controllers Classes ArticleController AuthController LocationController MaterialController PartController ProductController TrashCanController"
  },
  "api/Recycle.Api.Models.Articles.ArticleCreateModel.html": {
    "href": "api/Recycle.Api.Models.Articles.ArticleCreateModel.html",
    "title": "Class ArticleCreateModel | RecycleApi",
    "keywords": "Class ArticleCreateModel Namespace Recycle.Api.Models.Articles Assembly Recycle.Api.dll public class ArticleCreateModel Inheritance object ArticleCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Annotation public string? Annotation { get; set; } Property Value string AuthorsName public string AuthorsName { get; set; } Property Value string Heading public string Heading { get; set; } Property Value string Id [Required(ErrorMessage = \"{0} is required.\", AllowEmptyStrings = false)] public Guid Id { get; set; } Property Value Guid PicturePath public string PicturePath { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Articles.ArticleCreateModelExtensions.html": {
    "href": "api/Recycle.Api.Models.Articles.ArticleCreateModelExtensions.html",
    "title": "Class ArticleCreateModelExtensions | RecycleApi",
    "keywords": "Class ArticleCreateModelExtensions Namespace Recycle.Api.Models.Articles Assembly Recycle.Api.dll public static class ArticleCreateModelExtensions Inheritance object ArticleCreateModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToUpdate(Article) public static ArticleCreateModel ToUpdate(this Article source) Parameters source Article Returns ArticleCreateModel"
  },
  "api/Recycle.Api.Models.Articles.ArticleDetailModel.html": {
    "href": "api/Recycle.Api.Models.Articles.ArticleDetailModel.html",
    "title": "Class ArticleDetailModel | RecycleApi",
    "keywords": "Class ArticleDetailModel Namespace Recycle.Api.Models.Articles Assembly Recycle.Api.dll public class ArticleDetailModel Inheritance object ArticleDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Annotation public string Annotation { get; set; } Property Value string AuthorsName public string AuthorsName { get; set; } Property Value string CreatedAt public string CreatedAt { get; set; } Property Value string Heading public string Heading { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid PicturePath public string PicturePath { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Articles.ArticleDetailModelExtensions.html": {
    "href": "api/Recycle.Api.Models.Articles.ArticleDetailModelExtensions.html",
    "title": "Class ArticleDetailModelExtensions | RecycleApi",
    "keywords": "Class ArticleDetailModelExtensions Namespace Recycle.Api.Models.Articles Assembly Recycle.Api.dll public static class ArticleDetailModelExtensions Inheritance object ArticleDetailModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(Article) public static ArticleDetailModel ToDetail(this Article source) Parameters source Article Returns ArticleDetailModel"
  },
  "api/Recycle.Api.Models.Articles.html": {
    "href": "api/Recycle.Api.Models.Articles.html",
    "title": "Namespace Recycle.Api.Models.Articles | RecycleApi",
    "keywords": "Namespace Recycle.Api.Models.Articles Classes ArticleCreateModel ArticleCreateModelExtensions ArticleDetailModel ArticleDetailModelExtensions"
  },
  "api/Recycle.Api.Models.Authorization.LogInModel.html": {
    "href": "api/Recycle.Api.Models.Authorization.LogInModel.html",
    "title": "Class LogInModel | RecycleApi",
    "keywords": "Class LogInModel Namespace Recycle.Api.Models.Authorization Assembly Recycle.Api.dll public class LogInModel Inheritance object LogInModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email [Required] [EmailAddress] public string Email { get; set; } Property Value string Password [Required] public string Password { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Authorization.RegisterModel.html": {
    "href": "api/Recycle.Api.Models.Authorization.RegisterModel.html",
    "title": "Class RegisterModel | RecycleApi",
    "keywords": "Class RegisterModel Namespace Recycle.Api.Models.Authorization Assembly Recycle.Api.dll public class RegisterModel Inheritance object RegisterModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateOfBirth public string DateOfBirth { get; set; } Property Value string Email public string Email { get; set; } Property Value string FirstName public string FirstName { get; set; } Property Value string LastName public string LastName { get; set; } Property Value string Password public string Password { get; set; } Property Value string UserName public string UserName { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Authorization.TokenModel.html": {
    "href": "api/Recycle.Api.Models.Authorization.TokenModel.html",
    "title": "Class TokenModel | RecycleApi",
    "keywords": "Class TokenModel Namespace Recycle.Api.Models.Authorization Assembly Recycle.Api.dll public class TokenModel Inheritance object TokenModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email [Required] [EmailAddress] public string Email { get; set; } Property Value string Token [Required] public string Token { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Authorization.html": {
    "href": "api/Recycle.Api.Models.Authorization.html",
    "title": "Namespace Recycle.Api.Models.Authorization | RecycleApi",
    "keywords": "Namespace Recycle.Api.Models.Authorization Classes LogInModel RegisterModel TokenModel"
  },
  "api/Recycle.Api.Models.Locations.LocationCreateModel.html": {
    "href": "api/Recycle.Api.Models.Locations.LocationCreateModel.html",
    "title": "Class LocationCreateModel | RecycleApi",
    "keywords": "Class LocationCreateModel Namespace Recycle.Api.Models.Locations Assembly Recycle.Api.dll public class LocationCreateModel Inheritance object LocationCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public string Name { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Locations.LocationCreateModelExtentions.html": {
    "href": "api/Recycle.Api.Models.Locations.LocationCreateModelExtentions.html",
    "title": "Class LocationCreateModelExtentions | RecycleApi",
    "keywords": "Class LocationCreateModelExtentions Namespace Recycle.Api.Models.Locations Assembly Recycle.Api.dll public static class LocationCreateModelExtentions Inheritance object LocationCreateModelExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToUpdate(Location) public static LocationCreateModel ToUpdate(this Location source) Parameters source Location Returns LocationCreateModel"
  },
  "api/Recycle.Api.Models.Locations.LocationDetailModel.html": {
    "href": "api/Recycle.Api.Models.Locations.LocationDetailModel.html",
    "title": "Class LocationDetailModel | RecycleApi",
    "keywords": "Class LocationDetailModel Namespace Recycle.Api.Models.Locations Assembly Recycle.Api.dll public class LocationDetailModel Inheritance object LocationDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Locations.LocationDetailModelExtensions.html": {
    "href": "api/Recycle.Api.Models.Locations.LocationDetailModelExtensions.html",
    "title": "Class LocationDetailModelExtensions | RecycleApi",
    "keywords": "Class LocationDetailModelExtensions Namespace Recycle.Api.Models.Locations Assembly Recycle.Api.dll public static class LocationDetailModelExtensions Inheritance object LocationDetailModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(IApplicationMapper, Location) public static LocationDetailModel ToDetail(this IApplicationMapper mapper, Location source) Parameters mapper IApplicationMapper source Location Returns LocationDetailModel"
  },
  "api/Recycle.Api.Models.Locations.html": {
    "href": "api/Recycle.Api.Models.Locations.html",
    "title": "Namespace Recycle.Api.Models.Locations | RecycleApi",
    "keywords": "Namespace Recycle.Api.Models.Locations Classes LocationCreateModel LocationCreateModelExtentions LocationDetailModel LocationDetailModelExtensions"
  },
  "api/Recycle.Api.Models.Materials.CategoryDetailModelExtentions.html": {
    "href": "api/Recycle.Api.Models.Materials.CategoryDetailModelExtentions.html",
    "title": "Class CategoryDetailModelExtentions | RecycleApi",
    "keywords": "Class CategoryDetailModelExtentions Namespace Recycle.Api.Models.Materials Assembly Recycle.Api.dll public static class CategoryDetailModelExtentions Inheritance object CategoryDetailModelExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(Material) public static MaterialDetailModel ToDetail(this Material source) Parameters source Material Returns MaterialDetailModel"
  },
  "api/Recycle.Api.Models.Materials.MaterialCreateModel.html": {
    "href": "api/Recycle.Api.Models.Materials.MaterialCreateModel.html",
    "title": "Class MaterialCreateModel | RecycleApi",
    "keywords": "Class MaterialCreateModel Namespace Recycle.Api.Models.Materials Assembly Recycle.Api.dll public class MaterialCreateModel Inheritance object MaterialCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string? Description { get; set; } Property Value string Id [Required(ErrorMessage = \"{0} is required.\", AllowEmptyStrings = false)] public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Materials.MaterialCreateModelExtentions.html": {
    "href": "api/Recycle.Api.Models.Materials.MaterialCreateModelExtentions.html",
    "title": "Class MaterialCreateModelExtentions | RecycleApi",
    "keywords": "Class MaterialCreateModelExtentions Namespace Recycle.Api.Models.Materials Assembly Recycle.Api.dll public static class MaterialCreateModelExtentions Inheritance object MaterialCreateModelExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToUpdate(IApplicationMapper, Material) public static MaterialCreateModel ToUpdate(this IApplicationMapper mapper, Material source) Parameters mapper IApplicationMapper source Material Returns MaterialCreateModel"
  },
  "api/Recycle.Api.Models.Materials.MaterialDetailModel.html": {
    "href": "api/Recycle.Api.Models.Materials.MaterialDetailModel.html",
    "title": "Class MaterialDetailModel | RecycleApi",
    "keywords": "Class MaterialDetailModel Namespace Recycle.Api.Models.Materials Assembly Recycle.Api.dll public class MaterialDetailModel Inheritance object MaterialDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string Description { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Materials.html": {
    "href": "api/Recycle.Api.Models.Materials.html",
    "title": "Namespace Recycle.Api.Models.Materials | RecycleApi",
    "keywords": "Namespace Recycle.Api.Models.Materials Classes CategoryDetailModelExtentions MaterialCreateModel MaterialCreateModelExtentions MaterialDetailModel"
  },
  "api/Recycle.Api.Models.Parts.PartCreateModel.html": {
    "href": "api/Recycle.Api.Models.Parts.PartCreateModel.html",
    "title": "Class PartCreateModel | RecycleApi",
    "keywords": "Class PartCreateModel Namespace Recycle.Api.Models.Parts Assembly Recycle.Api.dll public class PartCreateModel Inheritance object PartCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string? Description { get; set; } Property Value string Id [Required(AllowEmptyStrings = false, ErrorMessage = \"Part must contain text!\")] public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string PicturePath public string? PicturePath { get; set; } Property Value string Type public int Type { get; set; } Property Value int"
  },
  "api/Recycle.Api.Models.Parts.PartDetailModel.html": {
    "href": "api/Recycle.Api.Models.Parts.PartDetailModel.html",
    "title": "Class PartDetailModel | RecycleApi",
    "keywords": "Class PartDetailModel Namespace Recycle.Api.Models.Parts Assembly Recycle.Api.dll public class PartDetailModel Inheritance object PartDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string Description { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid IsVerified public bool IsVerified { get; set; } Property Value bool Name public string Name { get; set; } Property Value string PicturePath public string? PicturePath { get; set; } Property Value string Type public int Type { get; set; } Property Value int"
  },
  "api/Recycle.Api.Models.Parts.ParttDetailModelExtensions.html": {
    "href": "api/Recycle.Api.Models.Parts.ParttDetailModelExtensions.html",
    "title": "Class ParttDetailModelExtensions | RecycleApi",
    "keywords": "Class ParttDetailModelExtensions Namespace Recycle.Api.Models.Parts Assembly Recycle.Api.dll public static class ParttDetailModelExtensions Inheritance object ParttDetailModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(IApplicationMapper, Part) public static PartDetailModel ToDetail(this IApplicationMapper mapper, Part source) Parameters mapper IApplicationMapper source Part Returns PartDetailModel"
  },
  "api/Recycle.Api.Models.Parts.html": {
    "href": "api/Recycle.Api.Models.Parts.html",
    "title": "Namespace Recycle.Api.Models.Parts | RecycleApi",
    "keywords": "Namespace Recycle.Api.Models.Parts Classes PartCreateModel PartDetailModel ParttDetailModelExtensions"
  },
  "api/Recycle.Api.Models.Products.ProductCreateModel.html": {
    "href": "api/Recycle.Api.Models.Products.ProductCreateModel.html",
    "title": "Class ProductCreateModel | RecycleApi",
    "keywords": "Class ProductCreateModel Namespace Recycle.Api.Models.Products Assembly Recycle.Api.dll public class ProductCreateModel Inheritance object ProductCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string? Description { get; set; } Property Value string EAN public string EAN { get; set; } Property Value string Id [Required(AllowEmptyStrings = false, ErrorMessage = \"Product must contain text!\")] public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string PartIds public IEnumerable<Guid> PartIds { get; set; } Property Value IEnumerable<Guid> PicturePath public string? PicturePath { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Products.ProductDetailModel.html": {
    "href": "api/Recycle.Api.Models.Products.ProductDetailModel.html",
    "title": "Class ProductDetailModel | RecycleApi",
    "keywords": "Class ProductDetailModel Namespace Recycle.Api.Models.Products Assembly Recycle.Api.dll public class ProductDetailModel Inheritance object ProductDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string Description { get; set; } Property Value string EAN public string EAN { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid IsVerified public bool IsVerified { get; set; } Property Value bool Name public string Name { get; set; } Property Value string PicturePath public string? PicturePath { get; set; } Property Value string"
  },
  "api/Recycle.Api.Models.Products.ProductDetailModelExtensions.html": {
    "href": "api/Recycle.Api.Models.Products.ProductDetailModelExtensions.html",
    "title": "Class ProductDetailModelExtensions | RecycleApi",
    "keywords": "Class ProductDetailModelExtensions Namespace Recycle.Api.Models.Products Assembly Recycle.Api.dll public static class ProductDetailModelExtensions Inheritance object ProductDetailModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(IApplicationMapper, Product) public static ProductDetailModel ToDetail(this IApplicationMapper mapper, Product source) Parameters mapper IApplicationMapper source Product Returns ProductDetailModel"
  },
  "api/Recycle.Api.Models.Products.html": {
    "href": "api/Recycle.Api.Models.Products.html",
    "title": "Namespace Recycle.Api.Models.Products | RecycleApi",
    "keywords": "Namespace Recycle.Api.Models.Products Classes ProductCreateModel ProductDetailModel ProductDetailModelExtensions"
  },
  "api/Recycle.Api.Models.TrashCans.TrashCanCreateModel.html": {
    "href": "api/Recycle.Api.Models.TrashCans.TrashCanCreateModel.html",
    "title": "Class TrashCanCreateModel | RecycleApi",
    "keywords": "Class TrashCanCreateModel Namespace Recycle.Api.Models.TrashCans Assembly Recycle.Api.dll public class TrashCanCreateModel Inheritance object TrashCanCreateModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string? Description { get; set; } Property Value string Id [Required(AllowEmptyStrings = false, ErrorMessage = \"TrashCan must contain text!\")] public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string PicturePath public string? PicturePath { get; set; } Property Value string Type public TrashCan.TrashCanType Type { get; set; } Property Value TrashCan.TrashCanType"
  },
  "api/Recycle.Api.Models.TrashCans.TrashCanCreateModelExtentions.html": {
    "href": "api/Recycle.Api.Models.TrashCans.TrashCanCreateModelExtentions.html",
    "title": "Class TrashCanCreateModelExtentions | RecycleApi",
    "keywords": "Class TrashCanCreateModelExtentions Namespace Recycle.Api.Models.TrashCans Assembly Recycle.Api.dll public static class TrashCanCreateModelExtentions Inheritance object TrashCanCreateModelExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToUpdate(TrashCan) public static TrashCanCreateModel ToUpdate(this TrashCan source) Parameters source TrashCan Returns TrashCanCreateModel"
  },
  "api/Recycle.Api.Models.TrashCans.TrashCanDetailModel.html": {
    "href": "api/Recycle.Api.Models.TrashCans.TrashCanDetailModel.html",
    "title": "Class TrashCanDetailModel | RecycleApi",
    "keywords": "Class TrashCanDetailModel Namespace Recycle.Api.Models.TrashCans Assembly Recycle.Api.dll public class TrashCanDetailModel Inheritance object TrashCanDetailModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description public string Description { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Name public string Name { get; set; } Property Value string PicturePath public string? PicturePath { get; set; } Property Value string Type public TrashCan.TrashCanType Type { get; set; } Property Value TrashCan.TrashCanType"
  },
  "api/Recycle.Api.Models.TrashCans.TrashCanDetailModelExtensions.html": {
    "href": "api/Recycle.Api.Models.TrashCans.TrashCanDetailModelExtensions.html",
    "title": "Class TrashCanDetailModelExtensions | RecycleApi",
    "keywords": "Class TrashCanDetailModelExtensions Namespace Recycle.Api.Models.TrashCans Assembly Recycle.Api.dll public static class TrashCanDetailModelExtensions Inheritance object TrashCanDetailModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToDetail(IApplicationMapper, TrashCan) public static TrashCanDetailModel ToDetail(this IApplicationMapper mapper, TrashCan source) Parameters mapper IApplicationMapper source TrashCan Returns TrashCanDetailModel"
  },
  "api/Recycle.Api.Models.TrashCans.html": {
    "href": "api/Recycle.Api.Models.TrashCans.html",
    "title": "Namespace Recycle.Api.Models.TrashCans | RecycleApi",
    "keywords": "Namespace Recycle.Api.Models.TrashCans Classes TrashCanCreateModel TrashCanCreateModelExtentions TrashCanDetailModel TrashCanDetailModelExtensions"
  },
  "api/Recycle.Api.Program.html": {
    "href": "api/Recycle.Api.Program.html",
    "title": "Class Program | RecycleApi",
    "keywords": "Class Program Namespace Recycle.Api Assembly Recycle.Api.dll public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Main(string[]) public static Task Main(string[] args) Parameters args string[] Returns Task"
  },
  "api/Recycle.Api.Services.EmailSenderService.html": {
    "href": "api/Recycle.Api.Services.EmailSenderService.html",
    "title": "Class EmailSenderService | RecycleApi",
    "keywords": "Class EmailSenderService Namespace Recycle.Api.Services Assembly Recycle.Api.dll public class EmailSenderService Inheritance object EmailSenderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors EmailSenderService(IClock, AppDbContext, IOptionsSnapshot<SmtpSettings>) public EmailSenderService(IClock clock, AppDbContext dbContext, IOptionsSnapshot<SmtpSettings> smtpSettings) Parameters clock IClock dbContext AppDbContext smtpSettings IOptionsSnapshot<SmtpSettings> Methods AddEmailToSendAsync(string, string, string) public Task AddEmailToSendAsync(string receiver, string subject, string body) Parameters receiver string subject string body string Returns Task SendEmailsAsync() public Task SendEmailsAsync() Returns Task"
  },
  "api/Recycle.Api.Services.html": {
    "href": "api/Recycle.Api.Services.html",
    "title": "Namespace Recycle.Api.Services | RecycleApi",
    "keywords": "Namespace Recycle.Api.Services Classes EmailSenderService"
  },
  "api/Recycle.Api.Settings.SmtpSettings.html": {
    "href": "api/Recycle.Api.Settings.SmtpSettings.html",
    "title": "Class SmtpSettings | RecycleApi",
    "keywords": "Class SmtpSettings Namespace Recycle.Api.Settings Assembly Recycle.Api.dll public class SmtpSettings Inheritance object SmtpSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Host public string Host { get; set; } Property Value string Password public string Password { get; set; } Property Value string Port public int Port { get; set; } Property Value int Sender public string Sender { get; set; } Property Value string UserName public string UserName { get; set; } Property Value string"
  },
  "api/Recycle.Api.Settings.html": {
    "href": "api/Recycle.Api.Settings.html",
    "title": "Namespace Recycle.Api.Settings | RecycleApi",
    "keywords": "Namespace Recycle.Api.Settings Classes SmtpSettings"
  },
  "api/Recycle.Api.Startup.html": {
    "href": "api/Recycle.Api.Startup.html",
    "title": "Class Startup | RecycleApi",
    "keywords": "Class Startup Namespace Recycle.Api Assembly Recycle.Api.dll public class Startup Inheritance object Startup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Startup(IConfiguration) public Startup(IConfiguration configuration) Parameters configuration IConfiguration Methods ConfigureServices(IServiceCollection) public void ConfigureServices(IServiceCollection services) Parameters services IServiceCollection"
  },
  "api/Recycle.Api.Utilities.ApplicationMapper.html": {
    "href": "api/Recycle.Api.Utilities.ApplicationMapper.html",
    "title": "Class ApplicationMapper | RecycleApi",
    "keywords": "Class ApplicationMapper Namespace Recycle.Api.Utilities Assembly Recycle.Api.dll public class ApplicationMapper : IApplicationMapper Inheritance object ApplicationMapper Implements IApplicationMapper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods LocationDetailModelExtensions.ToDetail(IApplicationMapper, Location) MaterialCreateModelExtentions.ToUpdate(IApplicationMapper, Material) ParttDetailModelExtensions.ToDetail(IApplicationMapper, Part) ProductDetailModelExtensions.ToDetail(IApplicationMapper, Product) TrashCanDetailModelExtensions.ToDetail(IApplicationMapper, TrashCan) Constructors ApplicationMapper(IClock) public ApplicationMapper(IClock Clock) Parameters Clock IClock Properties Now public Instant Now { get; } Property Value Instant"
  },
  "api/Recycle.Api.Utilities.ClaimsPrincipalExtensions.html": {
    "href": "api/Recycle.Api.Utilities.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions | RecycleApi",
    "keywords": "Class ClaimsPrincipalExtensions Namespace Recycle.Api.Utilities Assembly Recycle.Api.dll public static class ClaimsPrincipalExtensions Inheritance object ClaimsPrincipalExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetName(ClaimsPrincipal) public static string GetName(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns string GetUserId(ClaimsPrincipal) public static Guid GetUserId(this ClaimsPrincipal user) Parameters user ClaimsPrincipal Returns Guid"
  },
  "api/Recycle.Api.Utilities.IApplicationMapper.html": {
    "href": "api/Recycle.Api.Utilities.IApplicationMapper.html",
    "title": "Interface IApplicationMapper | RecycleApi",
    "keywords": "Interface IApplicationMapper Namespace Recycle.Api.Utilities Assembly Recycle.Api.dll public interface IApplicationMapper Extension Methods LocationDetailModelExtensions.ToDetail(IApplicationMapper, Location) MaterialCreateModelExtentions.ToUpdate(IApplicationMapper, Material) ParttDetailModelExtensions.ToDetail(IApplicationMapper, Part) ProductDetailModelExtensions.ToDetail(IApplicationMapper, Product) TrashCanDetailModelExtensions.ToDetail(IApplicationMapper, TrashCan) Properties Now Instant Now { get; } Property Value Instant"
  },
  "api/Recycle.Api.Utilities.html": {
    "href": "api/Recycle.Api.Utilities.html",
    "title": "Namespace Recycle.Api.Utilities | RecycleApi",
    "keywords": "Namespace Recycle.Api.Utilities Classes ApplicationMapper ClaimsPrincipalExtensions Interfaces IApplicationMapper"
  },
  "api/Recycle.Api.html": {
    "href": "api/Recycle.Api.html",
    "title": "Namespace Recycle.Api | RecycleApi",
    "keywords": "Namespace Recycle.Api Classes Program Startup"
  },
  "api/Recycle.Data.AppDbContext.html": {
    "href": "api/Recycle.Data.AppDbContext.html",
    "title": "Class AppDbContext | RecycleApi",
    "keywords": "Class AppDbContext Namespace Recycle.Data Assembly Recycle.Data.dll public class AppDbContext : IdentityDbContext<ApplicationUser, IdentityRole<Guid>, Guid>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext IdentityUserContext<ApplicationUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>> IdentityDbContext<ApplicationUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>> IdentityDbContext<ApplicationUser, IdentityRole<Guid>, Guid> AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<ApplicationUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.OnModelCreating(ModelBuilder) IdentityDbContext<ApplicationUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.UserRoles IdentityDbContext<ApplicationUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.Roles IdentityDbContext<ApplicationUser, IdentityRole<Guid>, Guid, IdentityUserClaim<Guid>, IdentityUserRole<Guid>, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.RoleClaims IdentityUserContext<ApplicationUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.OnModelCreating(ModelBuilder) IdentityUserContext<ApplicationUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.Users IdentityUserContext<ApplicationUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserClaims IdentityUserContext<ApplicationUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserLogins IdentityUserContext<ApplicationUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserTokens IdentityUserContext<ApplicationUser, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions) public AppDbContext(DbContextOptions options) Parameters options DbContextOptions Properties Articles public DbSet<Article> Articles { get; set; } Property Value DbSet<Article> Emails public DbSet<Email> Emails { get; set; } Property Value DbSet<Email> Locations public DbSet<Location> Locations { get; set; } Property Value DbSet<Location> Materials public DbSet<Material> Materials { get; set; } Property Value DbSet<Material> PartMaterials public DbSet<PartMaterial> PartMaterials { get; set; } Property Value DbSet<PartMaterial> Parts public DbSet<Part> Parts { get; set; } Property Value DbSet<Part> ProductParts public DbSet<ProductPart> ProductParts { get; set; } Property Value DbSet<ProductPart> Products public DbSet<Product> Products { get; set; } Property Value DbSet<Product> TrashCans public DbSet<TrashCan> TrashCans { get; set; } Property Value DbSet<TrashCan> TrashCansMaterialLocations public DbSet<TrashCanMaterialLocation> TrashCansMaterialLocations { get; set; } Property Value DbSet<TrashCanMaterialLocation> Users public DbSet<ApplicationUser> Users { get; set; } Property Value DbSet<ApplicationUser> Methods OnModelCreating(ModelBuilder) Configures the schema needed for the identity framework. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/Recycle.Data.Entities.Article.html": {
    "href": "api/Recycle.Data.Entities.Article.html",
    "title": "Class Article | RecycleApi",
    "keywords": "Class Article Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class Article : ITrackable Inheritance object Article Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties Annotation public string Annotation { get; set; } Property Value string Author public ApplicationUser Author { get; set; } Property Value ApplicationUser AuthorId public Guid AuthorId { get; set; } Property Value Guid CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Heading public string Heading { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string PicturePath public string? PicturePath { get; set; } Property Value string Text public string Text { get; set; } Property Value string"
  },
  "api/Recycle.Data.Entities.ArticleExtensions.html": {
    "href": "api/Recycle.Data.Entities.ArticleExtensions.html",
    "title": "Class ArticleExtensions | RecycleApi",
    "keywords": "Class ArticleExtensions Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public static class ArticleExtensions Inheritance object ArticleExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterDeleted(IQueryable<Article>) public static IQueryable<Article> FilterDeleted(this IQueryable<Article> query) Parameters query IQueryable<Article> Returns IQueryable<Article>"
  },
  "api/Recycle.Data.Entities.Email.html": {
    "href": "api/Recycle.Data.Entities.Email.html",
    "title": "Class Email | RecycleApi",
    "keywords": "Class Email Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class Email : ITrackable Inheritance object Email Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties Body public string Body { get; set; } Property Value string CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Receiver public string Receiver { get; set; } Property Value string ScheduledAt public Instant ScheduledAt { get; set; } Property Value Instant Sender public string Sender { get; set; } Property Value string SentAt public Instant? SentAt { get; set; } Property Value Instant? Subject public string Subject { get; set; } Property Value string"
  },
  "api/Recycle.Data.Entities.Identity.ApplicationUser.html": {
    "href": "api/Recycle.Data.Entities.Identity.ApplicationUser.html",
    "title": "Class ApplicationUser | RecycleApi",
    "keywords": "Class ApplicationUser Namespace Recycle.Data.Entities.Identity Assembly Recycle.Data.dll public class ApplicationUser : IdentityUser<Guid>, ITrackable Inheritance object IdentityUser<Guid> ApplicationUser Implements ITrackable Inherited Members IdentityUser<Guid>.ToString() IdentityUser<Guid>.Id IdentityUser<Guid>.UserName IdentityUser<Guid>.NormalizedUserName IdentityUser<Guid>.Email IdentityUser<Guid>.NormalizedEmail IdentityUser<Guid>.EmailConfirmed IdentityUser<Guid>.PasswordHash IdentityUser<Guid>.SecurityStamp IdentityUser<Guid>.ConcurrencyStamp IdentityUser<Guid>.PhoneNumberConfirmed IdentityUser<Guid>.TwoFactorEnabled IdentityUser<Guid>.LockoutEnd IdentityUser<Guid>.LockoutEnabled IdentityUser<Guid>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties Articles public ICollection<Article> Articles { get; set; } Property Value ICollection<Article> CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DateOfBirth public string DateOfBirth { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string FirstName public string? FirstName { get; set; } Property Value string IsAdmin public bool IsAdmin { get; set; } Property Value bool LastName public string? LastName { get; set; } Property Value string ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string PhoneNumber public string? PhoneNumber { get; set; } Property Value string"
  },
  "api/Recycle.Data.Entities.Identity.Role.html": {
    "href": "api/Recycle.Data.Entities.Identity.Role.html",
    "title": "Class Role | RecycleApi",
    "keywords": "Class Role Namespace Recycle.Data.Entities.Identity Assembly Recycle.Data.dll public class Role : IdentityRole<Guid>, ITrackable Inheritance object IdentityRole<Guid> Role Implements ITrackable Inherited Members IdentityRole<Guid>.ToString() IdentityRole<Guid>.Name IdentityRole<Guid>.NormalizedName IdentityRole<Guid>.ConcurrencyStamp object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid IsVerified public bool IsVerified { get; set; } Property Value bool ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string RoleName public string RoleName { get; set; } Property Value string UserRoles public ICollection<UserRole> UserRoles { get; set; } Property Value ICollection<UserRole>"
  },
  "api/Recycle.Data.Entities.Identity.UserRole.html": {
    "href": "api/Recycle.Data.Entities.Identity.UserRole.html",
    "title": "Class UserRole | RecycleApi",
    "keywords": "Class UserRole Namespace Recycle.Data.Entities.Identity Assembly Recycle.Data.dll public class UserRole Inheritance object UserRole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Role public Role Role { get; set; } Property Value Role RoleId public Guid RoleId { get; set; } Property Value Guid User public ApplicationUser User { get; set; } Property Value ApplicationUser UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/Recycle.Data.Entities.Identity.html": {
    "href": "api/Recycle.Data.Entities.Identity.html",
    "title": "Namespace Recycle.Data.Entities.Identity | RecycleApi",
    "keywords": "Namespace Recycle.Data.Entities.Identity Classes ApplicationUser"
  },
  "api/Recycle.Data.Entities.Location.html": {
    "href": "api/Recycle.Data.Entities.Location.html",
    "title": "Class Location | RecycleApi",
    "keywords": "Class Location Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class Location : ITrackable Inheritance object Location Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string TrashCanMaterialLocations public ICollection<TrashCanMaterialLocation> TrashCanMaterialLocations { get; set; } Property Value ICollection<TrashCanMaterialLocation>"
  },
  "api/Recycle.Data.Entities.LocationExtentions.html": {
    "href": "api/Recycle.Data.Entities.LocationExtentions.html",
    "title": "Class LocationExtentions | RecycleApi",
    "keywords": "Class LocationExtentions Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public static class LocationExtentions Inheritance object LocationExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterDeleted(IQueryable<Location>) public static IQueryable<Location> FilterDeleted(this IQueryable<Location> query) Parameters query IQueryable<Location> Returns IQueryable<Location>"
  },
  "api/Recycle.Data.Entities.Material.html": {
    "href": "api/Recycle.Data.Entities.Material.html",
    "title": "Class Material | RecycleApi",
    "keywords": "Class Material Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class Material : ITrackable Inheritance object Material Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Description public string Description { get; set; } Property Value string Id [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string PartMaterials public ICollection<PartMaterial> PartMaterials { get; set; } Property Value ICollection<PartMaterial> TrashCanMaterialLocations public ICollection<TrashCanMaterialLocation> TrashCanMaterialLocations { get; set; } Property Value ICollection<TrashCanMaterialLocation>"
  },
  "api/Recycle.Data.Entities.MaterialExtentions.html": {
    "href": "api/Recycle.Data.Entities.MaterialExtentions.html",
    "title": "Class MaterialExtentions | RecycleApi",
    "keywords": "Class MaterialExtentions Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public static class MaterialExtentions Inheritance object MaterialExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterDeleted(IQueryable<Material>) public static IQueryable<Material> FilterDeleted(this IQueryable<Material> query) Parameters query IQueryable<Material> Returns IQueryable<Material>"
  },
  "api/Recycle.Data.Entities.Part.html": {
    "href": "api/Recycle.Data.Entities.Part.html",
    "title": "Class Part | RecycleApi",
    "keywords": "Class Part Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class Part : ITrackable Inheritance object Part Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Description public string Description { get; set; } Property Value string Id [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public Guid Id { get; set; } Property Value Guid IsVerified public bool IsVerified { get; set; } Property Value bool ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string PartMaterials public ICollection<PartMaterial> PartMaterials { get; set; } Property Value ICollection<PartMaterial> PicturePath public string PicturePath { get; set; } Property Value string ProductParts public ICollection<ProductPart> ProductParts { get; set; } Property Value ICollection<ProductPart> Type public PartType Type { get; set; } Property Value PartType"
  },
  "api/Recycle.Data.Entities.PartExtentions.html": {
    "href": "api/Recycle.Data.Entities.PartExtentions.html",
    "title": "Class PartExtentions | RecycleApi",
    "keywords": "Class PartExtentions Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public static class PartExtentions Inheritance object PartExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterDeleted(IQueryable<Part>) public static IQueryable<Part> FilterDeleted(this IQueryable<Part> query) Parameters query IQueryable<Part> Returns IQueryable<Part>"
  },
  "api/Recycle.Data.Entities.PartMaterial.html": {
    "href": "api/Recycle.Data.Entities.PartMaterial.html",
    "title": "Class PartMaterial | RecycleApi",
    "keywords": "Class PartMaterial Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class PartMaterial Inheritance object PartMaterial Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Material public Material Material { get; set; } Property Value Material MaterialId public Guid MaterialId { get; set; } Property Value Guid Part public Part Part { get; set; } Property Value Part PartId public Guid PartId { get; set; } Property Value Guid"
  },
  "api/Recycle.Data.Entities.PartType.html": {
    "href": "api/Recycle.Data.Entities.PartType.html",
    "title": "Enum PartType | RecycleApi",
    "keywords": "Enum PartType Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public enum PartType Fields Part = 2 Wrapping = 1"
  },
  "api/Recycle.Data.Entities.Product.html": {
    "href": "api/Recycle.Data.Entities.Product.html",
    "title": "Class Product | RecycleApi",
    "keywords": "Class Product Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class Product : ITrackable Inheritance object Product Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Description public string? Description { get; set; } Property Value string EAN public string EAN { get; set; } Property Value string Id [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public Guid Id { get; set; } Property Value Guid IsVerified public bool IsVerified { get; set; } Property Value bool ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string PicturePath public string? PicturePath { get; set; } Property Value string ProductParts public ICollection<ProductPart> ProductParts { get; set; } Property Value ICollection<ProductPart>"
  },
  "api/Recycle.Data.Entities.ProductExtentions.html": {
    "href": "api/Recycle.Data.Entities.ProductExtentions.html",
    "title": "Class ProductExtentions | RecycleApi",
    "keywords": "Class ProductExtentions Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public static class ProductExtentions Inheritance object ProductExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterDeleted(IQueryable<Product>) public static IQueryable<Product> FilterDeleted(this IQueryable<Product> query) Parameters query IQueryable<Product> Returns IQueryable<Product>"
  },
  "api/Recycle.Data.Entities.ProductPart.html": {
    "href": "api/Recycle.Data.Entities.ProductPart.html",
    "title": "Class ProductPart | RecycleApi",
    "keywords": "Class ProductPart Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class ProductPart Inheritance object ProductPart Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Part public Part Part { get; set; } Property Value Part PartId public Guid PartId { get; set; } Property Value Guid Product public Product Product { get; set; } Property Value Product ProductId public Guid ProductId { get; set; } Property Value Guid"
  },
  "api/Recycle.Data.Entities.TrashCan.TrashCanType.html": {
    "href": "api/Recycle.Data.Entities.TrashCan.TrashCanType.html",
    "title": "Enum TrashCan.TrashCanType | RecycleApi",
    "keywords": "Enum TrashCan.TrashCanType Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public enum TrashCan.TrashCanType Fields Bio = 6 Cartons = 4 CommunalTrash = 7 Electronics = 5 Glass = 3 Metal = 8 Paper = 2 Plastic = 1 Textile = 9"
  },
  "api/Recycle.Data.Entities.TrashCan.html": {
    "href": "api/Recycle.Data.Entities.TrashCan.html",
    "title": "Class TrashCan | RecycleApi",
    "keywords": "Class TrashCan Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class TrashCan : ITrackable Inheritance object TrashCan Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Description public string Description { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string PicturePath public string? PicturePath { get; set; } Property Value string TrashCanMaterialLocations public ICollection<TrashCanMaterialLocation> TrashCanMaterialLocations { get; set; } Property Value ICollection<TrashCanMaterialLocation> Type public TrashCan.TrashCanType Type { get; set; } Property Value TrashCan.TrashCanType"
  },
  "api/Recycle.Data.Entities.TrashCanExtentions.html": {
    "href": "api/Recycle.Data.Entities.TrashCanExtentions.html",
    "title": "Class TrashCanExtentions | RecycleApi",
    "keywords": "Class TrashCanExtentions Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public static class TrashCanExtentions Inheritance object TrashCanExtentions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterDeleted(IQueryable<TrashCan>) public static IQueryable<TrashCan> FilterDeleted(this IQueryable<TrashCan> query) Parameters query IQueryable<TrashCan> Returns IQueryable<TrashCan>"
  },
  "api/Recycle.Data.Entities.TrashCanMaterialLocation.html": {
    "href": "api/Recycle.Data.Entities.TrashCanMaterialLocation.html",
    "title": "Class TrashCanMaterialLocation | RecycleApi",
    "keywords": "Class TrashCanMaterialLocation Namespace Recycle.Data.Entities Assembly Recycle.Data.dll public class TrashCanMaterialLocation Inheritance object TrashCanMaterialLocation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Location public Location Location { get; set; } Property Value Location LocationId public Guid LocationId { get; set; } Property Value Guid Material public Material Material { get; set; } Property Value Material MaterialId public Guid MaterialId { get; set; } Property Value Guid TrashCan public TrashCan TrashCan { get; set; } Property Value TrashCan TrashCanId public Guid TrashCanId { get; set; } Property Value Guid"
  },
  "api/Recycle.Data.Entities.html": {
    "href": "api/Recycle.Data.Entities.html",
    "title": "Namespace Recycle.Data.Entities | RecycleApi",
    "keywords": "Namespace Recycle.Data.Entities Classes Article ArticleExtensions Email Location LocationExtentions Material MaterialExtentions Part PartExtentions PartMaterial Product ProductExtentions ProductPart TrashCan TrashCanExtentions TrashCanMaterialLocation Enums PartType TrashCan.TrashCanType"
  },
  "api/Recycle.Data.Interfaces.ITrackable.html": {
    "href": "api/Recycle.Data.Interfaces.ITrackable.html",
    "title": "Interface ITrackable | RecycleApi",
    "keywords": "Interface ITrackable Namespace Recycle.Data.Interfaces Assembly Recycle.Data.dll public interface ITrackable Extension Methods ITrackableExtensions.SetCreateBySystem<T>(T, Instant) ITrackableExtensions.SetCreateBy<T>(T, string, Instant) ITrackableExtensions.SetDeleteBySystem<T>(T, Instant) ITrackableExtensions.SetDeleteBy<T>(T, string, Instant) ITrackableExtensions.SetModifyBySystem<T>(T, Instant) ITrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt Instant CreatedAt { get; set; } Property Value Instant CreatedBy string CreatedBy { get; set; } Property Value string DeletedAt Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy string? DeletedBy { get; set; } Property Value string ModifiedAt Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy string ModifiedBy { get; set; } Property Value string"
  },
  "api/Recycle.Data.Interfaces.ITrackableExtensions.html": {
    "href": "api/Recycle.Data.Interfaces.ITrackableExtensions.html",
    "title": "Class ITrackableExtensions | RecycleApi",
    "keywords": "Class ITrackableExtensions Namespace Recycle.Data.Interfaces Assembly Recycle.Data.dll public static class ITrackableExtensions Inheritance object ITrackableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetCreateBySystem<T>(T, Instant) public static T SetCreateBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetCreateBy<T>(T, string, Instant) public static T SetCreateBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T SetDeleteBySystem<T>(T, Instant) public static T SetDeleteBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetDeleteBy<T>(T, string, Instant) public static T SetDeleteBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T SetModifyBySystem<T>(T, Instant) public static T SetModifyBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetModifyBy<T>(T, string, Instant) public static T SetModifyBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T"
  },
  "api/Recycle.Data.Interfaces.html": {
    "href": "api/Recycle.Data.Interfaces.html",
    "title": "Namespace Recycle.Data.Interfaces | RecycleApi",
    "keywords": "Namespace Recycle.Data.Interfaces Classes ITrackableExtensions Interfaces ITrackable"
  },
  "api/Recycle.Data.Migrations.ConecctionTables.html": {
    "href": "api/Recycle.Data.Migrations.ConecctionTables.html",
    "title": "Class ConecctionTables | RecycleApi",
    "keywords": "Class ConecctionTables Namespace Recycle.Data.Migrations Assembly Recycle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241218105938_ConecctionTables\")] public class ConecctionTables : Migration Inheritance object Migration ConecctionTables Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Recycle.Data.Migrations.Int.html": {
    "href": "api/Recycle.Data.Migrations.Int.html",
    "title": "Class Int | RecycleApi",
    "keywords": "Class Int Namespace Recycle.Data.Migrations Assembly Recycle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241204100758_Int\")] public class Int : Migration Inheritance object Migration Int Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Recycle.Data.Migrations.RegionsRemoved.html": {
    "href": "api/Recycle.Data.Migrations.RegionsRemoved.html",
    "title": "Class RegionsRemoved | RecycleApi",
    "keywords": "Class RegionsRemoved Namespace Recycle.Data.Migrations Assembly Recycle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241219111518_RegionsRemoved\")] public class RegionsRemoved : Migration Inheritance object Migration RegionsRemoved Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Recycle.Data.Migrations.RegisterModel.html": {
    "href": "api/Recycle.Data.Migrations.RegisterModel.html",
    "title": "Class RegisterModel | RecycleApi",
    "keywords": "Class RegisterModel Namespace Recycle.Data.Migrations Assembly Recycle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241211102745_RegisterModel\")] public class RegisterModel : Migration Inheritance object Migration RegisterModel Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Recycle.Data.Migrations.TokenGenetaring.html": {
    "href": "api/Recycle.Data.Migrations.TokenGenetaring.html",
    "title": "Class TokenGenetaring | RecycleApi",
    "keywords": "Class TokenGenetaring Namespace Recycle.Data.Migrations Assembly Recycle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241211115243_TokenGenetaring\")] public class TokenGenetaring : Migration Inheritance object Migration TokenGenetaring Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Recycle.Data.Migrations.html": {
    "href": "api/Recycle.Data.Migrations.html",
    "title": "Namespace Recycle.Data.Migrations | RecycleApi",
    "keywords": "Namespace Recycle.Data.Migrations Classes ConecctionTables A base class inherited by each EF Core migration. Int A base class inherited by each EF Core migration. RegionsRemoved A base class inherited by each EF Core migration. RegisterModel A base class inherited by each EF Core migration. TokenGenetaring A base class inherited by each EF Core migration. userChangetNotNullable A base class inherited by each EF Core migration. userDeletedProperty A base class inherited by each EF Core migration."
  },
  "api/Recycle.Data.Migrations.userChangetNotNullable.html": {
    "href": "api/Recycle.Data.Migrations.userChangetNotNullable.html",
    "title": "Class userChangetNotNullable | RecycleApi",
    "keywords": "Class userChangetNotNullable Namespace Recycle.Data.Migrations Assembly Recycle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241211095022_userChangetNotNullable\")] public class userChangetNotNullable : Migration Inheritance object Migration userChangetNotNullable Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Recycle.Data.Migrations.userDeletedProperty.html": {
    "href": "api/Recycle.Data.Migrations.userDeletedProperty.html",
    "title": "Class userDeletedProperty | RecycleApi",
    "keywords": "Class userDeletedProperty Namespace Recycle.Data.Migrations Assembly Recycle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241211094533_userDeletedProperty\")] public class userDeletedProperty : Migration Inheritance object Migration userDeletedProperty Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/Recycle.Data.html": {
    "href": "api/Recycle.Data.html",
    "title": "Namespace Recycle.Data | RecycleApi",
    "keywords": "Namespace Recycle.Data Classes AppDbContext"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | RecycleApi",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | RecycleApi",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | RecycleApi",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}